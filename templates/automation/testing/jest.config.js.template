// Jest 配置模板
// 适用于: Node.js/JavaScript/TypeScript 项目
// 使用说明:
// 1. 将此文件重命名为 jest.config.js
// 2. 根据项目需求调整配置
// 3. 安装对应的测试依赖

module.exports = {
  // 测试环境
  testEnvironment: 'node',
  
  // 模块文件扩展名
  moduleFileExtensions: ['js', 'json', 'ts', 'tsx'],
  
  // 测试文件匹配模式
  testMatch: [
    '**/__tests__/**/*.+(js|jsx|ts|tsx)',
    '**/*.(test|spec).+(js|jsx|ts|tsx)'
  ],
  
  // 转换器配置
  transform: {
    '^.+\\.(js|jsx|ts|tsx)$': 'babel-jest',
  },
  
  // 覆盖率配置
  collectCoverage: true,
  coverageDirectory: 'coverage',
  coverageReporters: ['text', 'lcov', 'html'],
  
  // 覆盖率阈值
  coverageThreshold: {
    global: {
      branches: 80,
      functions: 80,
      lines: 80,
      statements: 80
    }
  },
  
  // 收集覆盖率的文件
  collectCoverageFrom: [
    'src/**/*.{js,jsx,ts,tsx}',
    '!src/**/*.d.ts',
    '!src/index.js',
    '!src/**/*.stories.{js,jsx,ts,tsx}',
    '!src/**/*.test.{js,jsx,ts,tsx}',
    '!src/**/*.spec.{js,jsx,ts,tsx}'
  ],
  
  // 忽略路径
  testPathIgnorePatterns: [
    '/node_modules/',
    '/dist/',
    '/build/'
  ],
  
  // 模块别名
  moduleNameMapping: {
    '^@/(.*)$': '<rootDir>/src/$1'
  },
  
  // 设置文件
  setupFilesAfterEnv: ['<rootDir>/src/setupTests.js'],
  
  // 模拟文件
  moduleNameMapping: {
    '\\.(css|less|scss|sass)$': 'identity-obj-proxy',
    '\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$': 'jest-transform-stub'
  },
  
  // 测试超时时间
  testTimeout: 10000,
  
  // 详细输出
  verbose: true,
  
  // 清除模拟
  clearMocks: true,
  
  // 重置模块
  resetModules: true,
  
  // TypeScript项目额外配置
  // 取消注释以下配置用于TypeScript项目
  /*
  preset: 'ts-jest',
  globals: {
    'ts-jest': {
      tsconfig: 'tsconfig.json'
    }
  }
  */
};